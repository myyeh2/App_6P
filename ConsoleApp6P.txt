
using System;
using Matrix_0; 

namespace ConsoleApp6P
{
    internal class Program
    {
        static void Main(string[] args)
        {

double[,] M = {{2, 0}, {0, 1}}; 
double[,] C = {{0.4, -0.05}, {-0.05, 0.2}}; 
double[,] K = {{3, -1}, {-1, 1}}; 

double[,] B0 = {{5, 0, -1, 0}, {0, 0, 1, 1}};
double[,] B1 = {{0, -0.5, 0, -1}, {0, 0, 0, 1}}; 
double[,] B2 = {{-0.05, 0, 0, 0}, {0, 0, 0, 0}}; 

double step = 0.5;
int iRow = (int)(50 / step + 1);
int iCol = M.GetLength(1) + 1;

// 建構Ft、Disp、Vel、 和 Acc 矩陣。
ReMatrix Ft = new ReMatrix(iRow, iCol); 
ReMatrix Disp = new ReMatrix(iRow, iCol);
ReMatrix Vel = new ReMatrix(iRow, iCol);
ReMatrix Acc = new ReMatrix(iRow, iCol);

// 將計算的結果存入Ft、Disp、Vel、和 Acc 的矩陣中。
for (int i = 0; i != iRow; i++)
{
    double t = step * i;
    // 周期 T = 2秒。
    Remainder rem = new Remainder(t, 2); 
    double tr = rem.Value; 

    double p0 = Math.Cos(0.1 * tr); 
    double p1 = Math.Sin(0.1 * tr);
    double p2 = tr; 
    double p3 = 1; 
    double[,] Ut = {{p0}, {p1}, {p2}, {p3}};

    ReMatrix Bf = (ReMatrix)M * B2 + (ReMatrix)C * B1 
        + (ReMatrix)K * B0; 
    ReMatrix ft = Bf * Ut; 
    Ft.Matrix[i, 0] = t; 
    Ft.Matrix[i, 1] = ft.Matrix[0, 0];
    Ft.Matrix[i, 2] = ft.Matrix[1, 0]; 
    
    double[,] Y = (ReMatrix)B0 * Ut; 
    double[,] Ydot = (ReMatrix)B1 * Ut; 
    double[,] Yddot = (ReMatrix)B2 * Ut; 
    
    Acc.Matrix[i, 0] = t;
    Acc.Matrix[i, 1] = Ydot[0, 0];
    Acc.Matrix[i, 2] = Yddot[1, 0];

    Vel.Matrix[i, 0] = t;
    Vel.Matrix[i, 1] = Ydot[0, 0];
    Vel.Matrix[i, 2] = Ydot[1, 0];

    Disp.Matrix[i, 0] = t;
    Disp.Matrix[i, 1] = Y[0, 0];
    Disp.Matrix[i, 2] = Y[1, 0];

}

// 特別解(Particular Solution)的部分
// 列印Ft之外力(Exciting Action)
Console.Write("   ***********   外力Ft其週期是2秒 :   ***********\n\n"); 
Console.Write("        時間(秒)          第0點            第1點\n\n");

Console.Write(new PR(Ft)); 
// 列印時間、第0點、和第1點外力
Console.Write("\n時間序列\n{0}", new PR4(Ft, 0));
Console.Write("\n第0點外力序列\n{0}", new PR4(Ft, 1));
Console.Write("\n第1點外力序列\n{0}\n", new PR4(Ft, 2)); 

Console.Write("  #########################################" + 
        "###############################################\n"); 

// 列印空間節點之響應(變位，速度，和加速)。 
Console.Write("\n{0,5}***位移反應量***{0,5}\n{0,8}時間(秒)" +
    "{0,8}第0點位移{0,8}第1點位移\n\n{1}", "", new PR(Disp));
Console.Write("\n{0,5}***速度反應量***{0,5}\n{0,8}時間(秒)" +
    "{0,8}第0點速度{0,8}第1點速度\n\n{1}", "", new PR(Vel));
Console.Write("\n***{0,5}加速度反應量{0,5}***\n{0,8}時間(秒)" +
    "{0,8}第0點加速度{0,7}第1點加速度\n\n{1}", "", new PR(Acc));

// 列印時間、節點變位、速度、和加速度等序列。 
Console.Write("\n時間序列\n{0}\n", new PR4(Disp, 0));
Console.Write("\n第0點變位序列\n{0}\n", new PR4(Disp, 1));
Console.Write("\n第1點變位序列\n{0}\n", new PR4(Disp, 2));
Console.Write("\n第0點速度序列\n{0}\n", new PR4(Vel, 1));
Console.Write("\n第1點速度序列\n{0}\n", new PR4(Vel, 2));
Console.Write("\n第0點加速度序列\n{0}\n", new PR4(Acc, 1));
Console.Write("\n第1點加速度序列\n{0}\n", new PR4(Acc, 2));
Console.Write("\n\n"); 

        }
    }
}
